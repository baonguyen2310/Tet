{"ast":null,"code":"var _jsxFileName = \"/home/bao/webProject/my-app/projectTet/client/src/components/CreatePostModal/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Modal, TextareaAutosize, Button, TextField } from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { modalState$ } from '../../redux/selectors';\nimport useStyles from './styles';\nimport { hideModal } from '../../redux/actions';\nimport { FileBase64 } from 'react-file-base64';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreatePostModal() {\n  _s();\n\n  const {\n    isShow\n  } = useSelector(modalState$);\n  console.log({\n    isShow\n  });\n  const classes = useStyles();\n  const [data, setData] = React.useState({\n    title: \"\",\n    content: \"\",\n    attachment: \"\"\n  });\n  const dispatch = useDispatch();\n  const onClose = React.useCallback(() => {\n    dispatch(hideModal());\n  }, [dispatch]);\n\n  const body = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.paper,\n    id: \"simple-modal-title\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.title,\n        required: true,\n        label: \"Title\",\n        value: data.title,\n        onChange: e => setData({ ...data,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n        rowsMin: 10,\n        rowsMax: 15,\n        placeholder: \"Content...\",\n        value: data.content,\n        onChange: e => setData({ ...data,\n          content: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FileBase64, {\n        accept: \"image/*\",\n        multiple: false,\n        type: \"file\",\n        value: data.attachment,\n        onDone: _ref => {\n          let {\n            base64\n          } = _ref;\n          return setData({ ...data,\n            attachment: base64\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        component: \"span\",\n        fullWidth: true,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      open: isShow,\n      onClose: onClose,\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreatePostModal, \"fPcXkOCegBFfsVqr3PpZjPJKE4M=\", false, function () {\n  return [useSelector, useStyles, useDispatch];\n});\n\n_c = CreatePostModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePostModal\");","map":{"version":3,"sources":["/home/bao/webProject/my-app/projectTet/client/src/components/CreatePostModal/index.js"],"names":["React","Modal","TextareaAutosize","Button","TextField","useSelector","useDispatch","modalState$","useStyles","hideModal","FileBase64","CreatePostModal","isShow","console","log","classes","data","setData","useState","title","content","attachment","dispatch","onClose","useCallback","body","paper","form","e","target","value","base64"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Modal, TextareaAutosize, Button, TextField } from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { modalState$ } from '../../redux/selectors';\nimport useStyles from './styles';\nimport { hideModal } from '../../redux/actions';\nimport { FileBase64 } from 'react-file-base64';\n\nexport default function CreatePostModal(){\n    const { isShow } = useSelector(modalState$);\n    console.log({isShow});\n\n    const classes = useStyles();\n\n    const [data, setData] = React.useState({\n        title: \"\",\n        content:\"\",\n        attachment:\"\"\n    });\n\n    const dispatch = useDispatch();\n    const onClose = React.useCallback(() => {\n        dispatch(hideModal());\n    }, [dispatch]);\n\n    const body = (\n        <div className={classes.paper} id=\"simple-modal-title\">\n            <h2>Create New Post</h2>\n            <form noValidate autoComplete='off' className={classes.form}>\n                <TextField \n                    className={classes.title} \n                    required \n                    label='Title' \n                    value={data.title}\n                    onChange={(e) => setData({...data, title: e.target.value})}\n                />\n                <TextareaAutosize \n                    rowsMin={10}\n                    rowsMax={15}\n                    placeholder='Content...'\n                    value={data.content}\n                    onChange={(e) => setData({...data, content: e.target.value})}\n                />\n                <FileBase64 \n                    accept='image/*' \n                    multiple={false} \n                    type='file' \n                    value={data.attachment}\n                    onDone={({base64}) => setData({...data, attachment: base64})}\n                />\n\n                <Button variant='contained' color='primary' component='span' fullWidth>\n                    Create\n                </Button>\n            </form>\n        </div>\n    );\n    return (\n        <div>\n            <Modal open={isShow} onClose={onClose}>\n                {body}\n            </Modal>\n        </div>   \n    )\n}"]},"metadata":{},"sourceType":"module"}