{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport * as actions from '../actions';\nimport * as api from '../../api';\n\nfunction* fetchPostSaga(action) {\n  try {\n    const posts = yield call(api.fetchPosts);\n    console.log('[posts]', posts);\n    yield put(actions.getPosts.getPostSuccess(posts.data));\n  } catch (err) {\n    console.log(err);\n    yield put(actions.getPosts.getPostFailure(err));\n  }\n}\n\nfunction* createPostSaga(action) {\n  try {\n    const post = yield call(api.createPost, action.payload);\n    console.log('[create-post-saga]', post);\n    yield put(actions.createPost.createPostSuccess(post));\n  } catch (err) {\n    console.log(err);\n    yield put(actions.createPost.createPostFailure(err));\n  }\n}\n\nfunction* mySaga() {\n  yield takeLatest(actions.getPosts.getPostsRequest, fetchPostSaga);\n  yield takeLatest(actions.createPost.createPostRequest, createPostSaga);\n}\n\nexport default mySaga;","map":{"version":3,"sources":["/home/bao/webProject/my-app/projectTet/client/src/redux/sagas/index.js"],"names":["takeLatest","call","put","actions","api","fetchPostSaga","action","posts","fetchPosts","console","log","getPosts","getPostSuccess","data","err","getPostFailure","createPostSaga","post","createPost","payload","createPostSuccess","createPostFailure","mySaga","getPostsRequest","createPostRequest"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AACA,OAAO,KAAKC,GAAZ,MAAqB,WAArB;;AAEA,UAAUC,aAAV,CAAwBC,MAAxB,EAAgC;AAC5B,MAAI;AACA,UAAMC,KAAK,GAAG,MAAMN,IAAI,CAACG,GAAG,CAACI,UAAL,CAAxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,KAAvB;AACA,UAAML,GAAG,CAACC,OAAO,CAACQ,QAAR,CAAiBC,cAAjB,CAAgCL,KAAK,CAACM,IAAtC,CAAD,CAAT;AACH,GAJD,CAIE,OAAOC,GAAP,EAAW;AACTL,IAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACA,UAAMZ,GAAG,CAACC,OAAO,CAACQ,QAAR,CAAiBI,cAAjB,CAAgCD,GAAhC,CAAD,CAAT;AACH;AAEJ;;AAED,UAAUE,cAAV,CAAyBV,MAAzB,EAAiC;AAC7B,MAAI;AACA,UAAMW,IAAI,GAAG,MAAMhB,IAAI,CAACG,GAAG,CAACc,UAAL,EAAiBZ,MAAM,CAACa,OAAxB,CAAvB;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCO,IAAlC;AACA,UAAMf,GAAG,CAACC,OAAO,CAACe,UAAR,CAAmBE,iBAAnB,CAAqCH,IAArC,CAAD,CAAT;AACH,GAJD,CAIE,OAAOH,GAAP,EAAW;AACTL,IAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACA,UAAMZ,GAAG,CAACC,OAAO,CAACe,UAAR,CAAmBG,iBAAnB,CAAqCP,GAArC,CAAD,CAAT;AACH;AAEJ;;AAED,UAAUQ,MAAV,GAAmB;AACf,QAAMtB,UAAU,CAACG,OAAO,CAACQ,QAAR,CAAiBY,eAAlB,EAAmClB,aAAnC,CAAhB;AACA,QAAML,UAAU,CAACG,OAAO,CAACe,UAAR,CAAmBM,iBAApB,EAAuCR,cAAvC,CAAhB;AACH;;AAED,eAAeM,MAAf","sourcesContent":["import { takeLatest, call, put } from 'redux-saga/effects';\nimport * as actions from '../actions';\nimport * as api from '../../api';\n\nfunction* fetchPostSaga(action) {\n    try {\n        const posts = yield call(api.fetchPosts);\n        console.log('[posts]', posts);\n        yield put(actions.getPosts.getPostSuccess(posts.data));\n    } catch (err){\n        console.log(err);\n        yield put(actions.getPosts.getPostFailure(err));\n    }\n    \n}\n\nfunction* createPostSaga(action) {\n    try {\n        const post = yield call(api.createPost, action.payload);\n        console.log('[create-post-saga]', post);\n        yield put(actions.createPost.createPostSuccess(post));\n    } catch (err){\n        console.log(err);\n        yield put(actions.createPost.createPostFailure(err));\n    }\n    \n}\n\nfunction* mySaga() {\n    yield takeLatest(actions.getPosts.getPostsRequest, fetchPostSaga);\n    yield takeLatest(actions.createPost.createPostRequest, createPostSaga);\n}\n\nexport default mySaga;"]},"metadata":{},"sourceType":"module"}