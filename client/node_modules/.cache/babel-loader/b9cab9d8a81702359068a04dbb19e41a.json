{"ast":null,"code":"import { INIT_STATE } from \"../../constant\";\nimport { getPosts, getType, createPost, updatePost } from \"../actions\";\nexport default function postsReducers() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE.posts;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case getType(getPosts.getPostsRequest):\n      //case getPostsRequest\n      return { ...state,\n        isLoading: true\n      };\n\n    case getType(getPosts.getPostSuccess):\n      return { ...state,\n        isLoading: false,\n        data: action.payload\n      };\n\n    case getType(getPosts.getPostFailure):\n      return { ...state,\n        isLoading: false\n      };\n\n    case getType(createPost.createPostSuccess):\n      return { ...state,\n        data: [...state.data, action.payload]\n      };\n\n    case getType(updatePost.updatePostSuccess):\n      return { ...state,\n        data: state.data.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    default:\n      return state;\n  }\n}\n;","map":{"version":3,"sources":["/home/bao/webProject/my-app/projectTet/client/src/redux/reducers/posts.js"],"names":["INIT_STATE","getPosts","getType","createPost","updatePost","postsReducers","state","posts","action","type","getPostsRequest","isLoading","getPostSuccess","data","payload","getPostFailure","createPostSuccess","updatePostSuccess","map","post","_id"],"mappings":"AAAA,SAASA,UAAT,QAA2B,gBAA3B;AACA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,UAA5B,EAAwCC,UAAxC,QAA0D,YAA1D;AAEA,eAAe,SAASC,aAAT,GAAyD;AAAA,MAAjCC,KAAiC,uEAAzBN,UAAU,CAACO,KAAc;AAAA,MAAPC,MAAO;;AACpE,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,OAAO,CAACD,QAAQ,CAACS,eAAV,CAAZ;AAAwC;AACpC,aAAO,EACH,GAAGJ,KADA;AAEHK,QAAAA,SAAS,EAAE;AAFR,OAAP;;AAIJ,SAAKT,OAAO,CAACD,QAAQ,CAACW,cAAV,CAAZ;AACI,aAAO,EACH,GAAGN,KADA;AAEHK,QAAAA,SAAS,EAAE,KAFR;AAGHE,QAAAA,IAAI,EAAEL,MAAM,CAACM;AAHV,OAAP;;AAKJ,SAAKZ,OAAO,CAACD,QAAQ,CAACc,cAAV,CAAZ;AACI,aAAO,EACH,GAAGT,KADA;AAEHK,QAAAA,SAAS,EAAE;AAFR,OAAP;;AAIJ,SAAKT,OAAO,CAACC,UAAU,CAACa,iBAAZ,CAAZ;AACI,aAAO,EACH,GAAGV,KADA;AAEHO,QAAAA,IAAI,EAAE,CAAC,GAAGP,KAAK,CAACO,IAAV,EAAgBL,MAAM,CAACM,OAAvB;AAFH,OAAP;;AAIJ,SAAKZ,OAAO,CAACE,UAAU,CAACa,iBAAZ,CAAZ;AACI,aAAO,EACH,GAAGX,KADA;AAEHO,QAAAA,IAAI,EAAEP,KAAK,CAACO,IAAN,CAAWK,GAAX,CAAeC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaZ,MAAM,CAACM,OAAP,CAAeM,GAA5B,GAAkCZ,MAAM,CAACM,OAAzC,GAAmDK,IAA1E;AAFH,OAAP;;AAIJ;AACI,aAAOb,KAAP;AA5BR;AA+BH;AAAA","sourcesContent":["import { INIT_STATE } from \"../../constant\";\nimport { getPosts, getType, createPost, updatePost } from \"../actions\";\n\nexport default function postsReducers (state = INIT_STATE.posts, action){\n    switch(action.type) {\n        case getType(getPosts.getPostsRequest): //case getPostsRequest\n            return {\n                ...state,\n                isLoading: true\n            }\n        case getType(getPosts.getPostSuccess):\n            return {\n                ...state,\n                isLoading: false,\n                data: action.payload\n            }\n        case getType(getPosts.getPostFailure):\n            return {\n                ...state,\n                isLoading: false\n            }\n        case getType(createPost.createPostSuccess):\n            return {\n                ...state,\n                data: [...state.data, action.payload]\n            }\n        case getType(updatePost.updatePostSuccess):\n            return {\n                ...state,\n                data: state.data.map(post => post._id === action.payload._id ? action.payload : post)\n            }\n        default:\n            return state;\n\n    }\n};"]},"metadata":{},"sourceType":"module"}